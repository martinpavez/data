Notes on CMIP models:

On cluster we have:
    SP
        scenarios: ssp126, ssp245, ssp585
        models: daily for ESM1.2 High Resolution 
        dates: 2015-2100
        grid: gn
    TA (ta at level)
        scenarios: ""
        models: 6hrlev (with elevation idk level??) for ESM1.2 High Resolution
        dates: ""
        grid: gn
    TAS (surface 2m)
        scenarios: historical, picontrol, ssp119, ssp126, ssp245, ssp370, ssp585
        models: 3hr GFDL-ESM4 
        dates: historical 1850-2015, ssp 2015-2100
        grid: gr1
    U-wind:
        scenaris: 126,245,285
        models: daily MPI-ESM1.2HR
        dates: 2015-2100
        grid:gn

Usually models are INSTITUTE-MODEL-RESOLUTION 
6hr standard
6hrLev at model levels (altitude levels)
6hrPlev pressure levels (e.g. 850hPa)
plevs: https://cmip6dr.github.io/Data_Request_Home/Documents/CMIP6_pressure_levels.pdf
    basically if we need 850hpa, we need plev3, plev4(4s), plev5, plev8, plev10, plev11, plev19, plev23, plev27, plev39

Two models: GFDL-ESM4 and MPI-ESM1.2 HR

grids:
gn: native grid of the model component
gr: regridded to the regular target grid specified for the particular variable
gr1: another target grid 

MPI-ESM1.2HR, r1i1p1f1 has both 100km or 50km grids
    historical:
        daily has tos(sst), tas, tasmax, ua, psl
        monthly has ""
    ssp 126, 245, 370, 585
        same

GFDL-ESM4, r1i1p1f1 100km grids
    historical:
        daily  has tos, tas, tasmax, ua, psl
        monthly  "" 
    ssps:
        daily has everything except for ua (only uas). only ssp585 has this variable
        monthly has everything

EC-EARTH3, r1i1p1f1, 100km grids
    historical and ssps have everything.

Update library script for download CMIP6 data  

Visualize some of the historical model vs era5, maybe construct the simplest index (like wind) and visualize how much they differ. 
Remember grid is not the same always, so interpolation in small boxes could differ.

Review how much do drivers differ cmip6 vs era5
construct cmip6 raw to intermediate to standarize data: coordinates, units, nans. Path organize just 01_raw.
    Path structure should be the same as 01, only problem is that in era5 we agreed on only daily 
    so now have to figure out how to structure monthly raws vs monthly aggregated:
        my proposal would be to stablish Amon as raw and monthly_mean/daily or daily_mean/monthly,
        e.g. source/scenario/table_id(freq)/variable/table_id(freq)
             source/scenario/table_id(original freq)/method_variable/new_freq
        Obviously, last frequency would be only lower than table_id from raw
    (this problem assumes that we need monthly and daily in raw, prolly cs models at lower frequency are better than averaging higher frequency, but idk, ask fabrice)
    ERA5 handles by creating directory "{method}_{var}"

    Coordinates: rename latitude to longitude
    units: same as era5: m/s, K, Pa
    drop bounds?? and any other columns? they don't bother so personally wouldnt drop anything, but i remember somewhere in era5 we dropped e.g. "number"

    Create new function in utils to unit conversion and regrid data

    Download new models to compare between cmip6 models and vs era5 reanalysis
    
Ideas:
    Check also ssp features? We can validate only from 2015-2023 (first available year ssp - last year era5 in cluster)

    Run era5 trained model for cmip6 historical features and check performance,
    also run for the 2015-2023 ssp and validate performance
    ofc compare also the baseline (direct detection of hws from historical and ssp models)

    Question: after all these validations, then we could report the model on ssp for future (2025-2100)?? (lack of validation)
    
Models:
    CESM2
    MIROC6
    GISS: Does not have standard future scenarios (has ssp245-GHG, ssp585-bgc)
    MRI
    HadGEm: Only has hist-1950, idk the difference

    Check availability of scenarios ssp119/126, middleground (245) and 585
     
Drivers:
    Check coincidence between drivers in ERA5 then in CMIP6


github:
    create modules for each standarization of data, then call each function by model
    
Check correlations between same model and match them with cmip6 models
Check vaguada index (should not work with anomalies, rather raw pressure)

Construct drivers for scenarios and create sanity checks (fft or any stats for phenomena detection)